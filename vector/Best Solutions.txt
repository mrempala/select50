Time Complexity:
1. maxHeap50.cpp - The fastest algorithm. O(n + n * lg50) *worst* case.
                   Usually better than that as most elements will not need
                   to be inserted into the 50 sized max heap at any time.
                   Worst case occurs if elements are reverse sorted.
2. bucket.cpp    - 3rd fastest and uses a lot of additional memory.

Space Complexity:
1. quick.cpp   - No additional memory, modifies original vector
2. minHeap.cpp - No additional memory, modifies original vector

Readability:
1. readability.cpp - Basically a one liner that uses std::sort


Exec time using clock from time.h (in seconds):
bucket.cpp       0.058
maxHeap50.cpp    0.011 
minHeap.cpp      0.104
quick.cpp        0.054
readability.cpp  0.455
z.cpp            0.008



Worse exec time measurements using linux console time command
Example command: time ./a.out
Exec Time in seconds (real time and without -O3):
bucket.cpp       0.135
minHeap.cpp      0.185
quick.cpp        0.130
readability.cpp  0.530
maxHeap50.cpp    0.080
z.cpp            0.075
base benchmark   0.070

